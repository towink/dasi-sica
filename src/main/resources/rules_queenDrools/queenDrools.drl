package com.sica.agents

import com.sica.entities.agents.DroolsBee;
import com.sica.entities.agents.QueenDrools;
import com.sica.simulation.SimulationState;
import sim.util.Int2D;

/*rule "Create bees"
	when
		state : SimulationState()
		queen : QueenDrools( state.getConfig().getTime2Create() <= getCount() && state.aliment >= state.getConfig().getCost2Create());
	then
		state.decreaseAliment(state.getConfig().getCost2Create());
		queen.resetCount();
		queen.createBee(state);
end*/

rule "Create bees"
	when
		state : SimulationState()
		queen : QueenDrools(location : getLocation(), state.getConfig().getTime2Create() <= getCount() && getAvailableFood() >= state.getConfig().getCost2Create());
	then
		state.environment.setMetadataAt(location, queen.getAvailableFood() - state.getConfig().getCost2Create());
		queen.resetCount();
		queen.createBee(state);
end

rule "Increase count to generate bees"
	salience -10
	when
		$state : SimulationState()
		queen : QueenDrools($state.getConfig().getTime2Create() > getCount())
	then
		queen.increaseCount();
end

/*
	get location type
	check that it is a hive
	if it is, check that it has food
	if it has food, spawn new bee


*/